# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Deploy PHP/Laravel to Azure Web App (Incremental FTPS)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (Optional) Build vendors / caches locally. Remove if you build on server.
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer:v2
          extensions: mbstring, intl, pdo_mysql, bcmath, curl, gd, zip, openssl, tokenizer, xml, ctype, dom, fileinfo

      - name: Install Composer deps (no-dev)
        run: |
          composer install --no-dev --prefer-dist --no-interaction --no-progress --optimize-autoloader --no-scripts || true
          php artisan config:clear || true
          php artisan route:cache || true
          php artisan view:cache  || true

      # Parse the Azure publish profile secret to get FTPS creds + remote dir
      - name: Extract FTPS credentials from publish profile
        id: pp
        env:
          PUBLISH_PROFILE: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_ECF72440E87C431C87096F01C8B4EC60 }}
        run: |
          # Save secret to file
          echo "$PUBLISH_PROFILE" > publishProfile.xml

          # Ensure xmllint is available
          if ! command -v xmllint >/dev/null 2>&1; then
            sudo apt-get update -y
            sudo apt-get install -y libxml2-utils
          fi

          # Select the FTP profile node
          FTP_NODE=$(xmllint --xpath 'string(//publishProfile[@publishMethod="FTP"]/@publishUrl)' publishProfile.xml)
          FTP_USER=$(xmllint --xpath 'string(//publishProfile[@publishMethod="FTP"]/@userName)' publishProfile.xml)
          FTP_PASS=$(xmllint --xpath 'string(//publishProfile[@publishMethod="FTP"]/@userPWD)' publishProfile.xml)

          # publishUrl looks like: ftp://waws-prod-xxx.ftp.azurewebsites.windows.net/site/wwwroot
          # Extract host and remote directory
          # host => waws-prod-xxx.ftp.azurewebsites.windows.net
          FTP_HOST=$(echo "$FTP_NODE" | sed -E 's#^ftp://([^/]+)/.*#\1#')
          # remote dir => /site/wwwroot/  (ensure trailing slash)
          REMOTE_DIR=$(echo "$FTP_NODE" | sed -E 's#^ftp://[^/]+(/.*)$#\1#')
          if [ -z "$REMOTE_DIR" ] || [ "$REMOTE_DIR" = "$FTP_NODE" ]; then
            REMOTE_DIR="/site/wwwroot/"
          fi
          case "$REMOTE_DIR" in
            */) : ;;  # already ends with /
            *) REMOTE_DIR="${REMOTE_DIR}/" ;;
          esac

          echo "host=$FTP_HOST"           >> $GITHUB_OUTPUT
          echo "username=$FTP_USER"       >> $GITHUB_OUTPUT
          echo "password=$FTP_PASS"       >> $GITHUB_OUTPUT
          echo "server_dir=$REMOTE_DIR"   >> $GITHUB_OUTPUT

      # Incremental sync only changed files via explicit FTPS
      - name: Incremental deploy to Azure via FTPS
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ steps.pp.outputs.host }}
          username: ${{ steps.pp.outputs.username }}
          password: ${{ steps.pp.outputs.password }}
          protocol: ftps
          port: 21
          server-dir: ${{ steps.pp.outputs.server_dir }}
          state-name: .ftp-deploy-sync-state.json   # cache for diffing
          exclude: |
            **/.git*
            **/.github/**
            **/tests/**
            node_modules/**
            storage/app/public/**
            storage/framework/cache/**
            storage/framework/sessions/**
            storage/framework/views/**
            storage/logs/**
            public/storage/**           # symlink mount point
          timeout: 600000
          security: strict              # if TLS issues: try 'loose' or 'controlOnly'
          log-level: verbose

      # Optional: recreate storage symlink on server after deploy
      # Skips if you already serve storage via Nginx alias / IIS virtual dir.
      - name: Recreate storage symlink on Azure (php artisan storage:link)
        env:
          SCM_PUBLISH_PROFILE: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_ECF72440E87C431C87096F01C8B4EC60 }}
        run: |
          echo "$SCM_PUBLISH_PROFILE" > pp.xml
          if ! command -v xmllint >/dev/null 2>&1; then
            sudo apt-get update -y
            sudo apt-get install -y libxml2-utils
          fi
          # Extract Kudu (scm) basic auth and host from MSDeploy profile
          KUDU_USER=$(xmllint --xpath 'string(//publishProfile[@publishMethod="MSDeploy"]/@userName)' pp.xml)
          KUDU_PASS=$(xmllint --xpath 'string(//publishProfile[@publishMethod="MSDeploy"]/@userPWD)' pp.xml)
          # scm site is usually <siteName>.scm.azurewebsites.net
          SITE_NAME=$(xmllint --xpath 'string(//publishProfile[@publishMethod="MSDeploy"]/@msdeploySite)' pp.xml)
          KUDU_HOST="${SITE_NAME}.scm.azurewebsites.net"

          # Run artisan on the server
          curl -sS -u "$KUDU_USER:$KUDU_PASS" \
            -H "Content-Type: application/json" \
            -X POST "https://${KUDU_HOST}/api/command" \
            -d '{"command":"php artisan storage:link","dir":"/home/site/wwwroot"}' || true






